/*
class Solution {
    public int findCenter(int[][] edges) {
        int num1 = edges[0][0];
        int num2 = edges[0][1];
        if(edges[1][0] == num1 ||edges[1][1] == num1){
            return num1;
        }
        return num2;
    }
}
*/


class Solution {
    public int findCenter(int[][] edges) {
        List<List<Integer>> lst= new ArrayList<>();
        int n = 0;
        int k=edges.length;
        for(int[] edge: edges){
            int tmp=Math.max(edge[1],edge[0]);
            n=Math.max(tmp,n);
        }
        for(int i=0; i<=n; i++){
            lst.add(new ArrayList<Integer>());
        }
        for(int i=0; i<k; i++){
            lst.get(edges[i][0]).add(edges[i][1]);
            lst.get(edges[i][1]).add(edges[i][0]);
        }
        for(int i=1; i<=n; i++){
            if(lst.get(i).size()==n-1){
                return i;
            }
        }
        return -1;
    }
}
