class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {
        // if(root==null){
        //     return root;
        // }   
        // if(root.val==key){
        //     if(root.left!=null){
        //         TreeNode temp=root.right;
        //         root=root.left;
        //         root.right=temp;
        //     }else{
        //         root = root.right!=null ? root.right : null;
        //     }
        //     return root;
        // }
        // if(root.val<key){
        //     root.right= deleteNode(root.right, key);
        // }else{
        //     root.left=deleteNode(root.left, key);
        // }
        // return root;
        if(root==null){
            return null;
        }
        if(root.val==key){
            TreeNode temp = root.right;
            if(root.left!=null){
                root=root.left;
                TreeNode cur=root;
                // while(cur.left!=null){
                //     cur=cur.left;
                // }
                if(cur.right!=null){
                  while(cur.right!=null){
                    cur=cur.right;
                    }
                }
                cur.right=temp;
            }else{
                root=temp;
            }
            return root;
        }
        if(key<root.val){
            root.left= deleteNode(root.left, key);
        }else{
            root.right= deleteNode(root.right, key);
        }
        return root;
    }
}
